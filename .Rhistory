# Load the tidyverse library
library(tidyverse)
# Read in the car sales data
# Make sure the data file is in your lab_0/data/ folder
car_data <- read_csv("data/car_sales_data.csv")
glimpse()
glimpse(car_data)
colnames(car_data)
head(car_data)
nrow(car_data)
ncol(car_data)
car_data
car_df <- as.data.frame(car_data)
car_df
select(car_data,Model, Mileage)
select(car_data,Price, Fuel type)
Error: unexpected symbol in "select(car_data,Price, Fuel type"
select(car_data,Price,"Fuel type")
select(car_data,-`Engine size`)
rename(car_data, year ="Year of manufacture")
names(car_data)
# Rename 'Year of manufacture' to year
rename(car_data, year ="Year of manufacture")
# Check that it worked
names(car_data)
mutate(age = 2025 - "Year of manufacture")
mutate(age = 2025 - ("Year of manufacture"))
mutate(`Year of manufacture` = as.numeric(`Year of manufacture`))
car_data$rename(car_data, year ="Year of manufacture")
car_data$ rename(car_data, year ="Year of manufacture")
car_data = car_data %>%
rename(year = "Year of manufacture")
names(car_data)
car_data = car_data %>%
mutate(age = 2025 - (year))
car_data = car_data %>%
mutate(mileage_per_year = Mileage / age)
car_data
car_data <- car_data %>%
mutate(price_category = case_when(Price < 15000 ~ "budget", Price >= 15000 & Price <= 30000 ~ "midrange",Price > 30000 ~ "premium"))
car_data
car_data = car_data %>%
filter(manufaturer = Toyota)
car_data = car_data %>%
filter(manufaturer == Toyota)
car_data = car_data %>%
filter(Manufaturer = Toyota)
car_data = car_data %>%
filter("Manufaturer = Toyota")
car_data = car_data %>%
filter(Manufaturer == "Toyota")
car_data = car_data %>%
filter(Manufacturer == Toyota)
car_data = car_data %>%
filter(Manufacturer == "Toyota")
car_data
car_data = car_data %>%
filter(Manufacturer == "Toyota")
car_data = car_data %>%
filter(Mileage < 30000)
car_data
car_data = car_data %>%
filter(price_category == "premium", Mileage < 15000)
car_data
filter(Manufacturer == "Honda", or "Nissan")
car_data = car_data %>%
filter(Manufacturer == "Honda" | Manufacturer == "Nissan")
car_data
car_data = read_csv("data/car_sales_data.csv")
cd ('/Users/JoshuaRigsby 1/Desktop/UPenn/MUS 5080 Public Policy Analytics/Portfolio Files/portfolio-setup-jrigsbyr5/labs/lab0').
cd ('/Users/JoshuaRigsby 1/Desktop/UPenn/MUS 5080 Public Policy Analytics/Portfolio Files/portfolio-setup-jrigsbyr5/labs/lab0')"
car_data = read_csv("data/car_sales_data.csv")
car_data = read_csv("data/car_sales_data.csv")
pwd
setwd ('/Users/JoshuaRigsby 1/Desktop/UPenn/MUS 5080 Public Policy Analytics/Portfolio Files/portfolio-setup-jrigsbyr5/labs/lab0')"
gwd
gwd
getwd
car_data = read_csv("data/car_sales_data.csv")
setwd ('/Users/JoshuaRigsby 1/Desktop/UPenn/MUS 5080 Public Policy Analytics/Portfolio Files/portfolio-setup-jrigsbyr5/labs/lab0')
getwd
car_data = read_csv("data/car_sales_data.csv")
car_data = car_data %>%
select(Manufacturer == "Honda" | Manufacturer == "Nissan")
car_data
car_data = car_data %>%
select(Manufacturer == "Honda" | Manufacturer == "Nissan")
car_data %>%
Filter(Manufacturer == "Honda" | Manufacturer == "Nissan")
car_data %>%
filter(Manufacturer == "Honda" | Manufacturer == "Nissan")
car_data
price_range = car_data %>%
Filter(Price >= 20000 & <= 35000)
price_range = car_data %>%
filter(Price >= 20000 & Price <= 35000)
price_range
honda_nissan = car_data %>%
filter(Manufacturer == "Honda" | Manufacturer == "Nissan")
honda_nissan
# Rename 'Year of manufacture' to year
# Correct syntax for piping a command with dplyr for readability
car_data = car_data %>%
rename(year = "Year of manufacture")
# Check that it worked
names(car_data)
# Create an 'age' column (2025 minus year of manufacture)
car_data = car_data %>%
mutate(age = 2025 - (year))
# Create a mileage_per_year column
car_data = car_data %>%
mutate(mileage_per_year = Mileage / age)
# Look at your new columns
#select(car_data, Model, year, age, Mileage, mileage_per_year)
select(car_data, Model, year, age, Mileage, mileage_per_year)
# Create a price_category column where if price is < 15000, its is coded as budget, between 15000 and 30000 is midrange and greater than 30000 is mid-range (use case_when)
car_data = car_data %>%
mutate(price_category = case_when(Price < 15000 ~ "budget", Price >= 15000 & Price <= 30000 ~ "midrange",Price > 30000 ~ "premium"))
# Check your categories select the new column and show it
select(car_data, price, price_category)
# Create a price_category column where if price is < 15000, its is coded as budget, between 15000 and 30000 is midrange and greater than 30000 is mid-range (use case_when)
car_data = car_data %>%
mutate(price_category = case_when(Price < 15000 ~ "budget", Price >= 15000 & Price <= 30000 ~ "midrange",Price > 30000 ~ "premium"))
# Check your categories select the new column and show it
select(car_data, Price, price_category)
disel_age = car_data %>%
filter(age > 10 & "Fuel type" == "diesel")
disel_age
car_data = read_csv("data/car_sales_data.csv")
# Select just Model and Mileage columns
select(car_data,Model, Mileage)
# Select Manufacturer, Price, and Fuel type
# Have to quote Fuel type because there is a space
select(car_data,Price, "Fuel type")
# Challenge: Select all columns EXCEPT Engine Size
# Shortcut is to use minus sign to exclude
select(car_data,-`Engine size`)
# Rename 'Year of manufacture' to year
# Correct syntax for piping a command with dplyr for readability
car_data = car_data %>%
rename(year = "Year of manufacture")
# Check that it worked
names(car_data)
# Create an 'age' column (2025 minus year of manufacture)
car_data = car_data %>%
mutate(age = 2025 - (year))
# Create a mileage_per_year column
car_data = car_data %>%
mutate(mileage_per_year = Mileage / age)
# Look at your new columns
#select(car_data, Model, year, age, Mileage, mileage_per_year)
select(car_data, Model, year, age, Mileage, mileage_per_year)
# Create a price_category column where if price is < 15000, its is coded as budget, between 15000 and 30000 is midrange and greater than 30000 is mid-range (use case_when)
car_data = car_data %>%
mutate(price_category = case_when(Price < 15000 ~ "budget", Price >= 15000 & Price <= 30000 ~ "midrange",Price > 30000 ~ "premium"))
# Check your categories select the new column and show it
select(car_data, Price, price_category)
disel_age = car_data %>%
filter(age > 10 & "Fuel type" == "diesel")
disel_age
avg_price_by_brand = car_data %>%
group_by(Manufacturer) %>%
summarize(avg_price = mean(Price, na.rm = TRUE))
avg_price_by_brand
avg_price_by_brand = car_data %>%
group_by(Manufacturer) %>%
summarize(avg_price = mean(Price, na.rm = TRUE))
avg_mileage_by_fuel = car_data %>%
group_by("Fuel type") %>%
summarize(avg_mileage = mean(Mileage, na.rm = TRUE))
avg_mileage_by_fuel
avg_mileage_by_fuel = car_data %>%
group_by('Fuel type') %>%
summarize(avg_mileage = mean(Mileage, na.rm = TRUE))
avg_mileage_by_fuel
# Frequency table for price categories
car_data %>%
count(Price)
car_data %>%
count("Manufacturer")
car_data %>%
count(Manufacturer)
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)
library(tidycensus)
library(tidyverse)
library(knitr)
# Set your Census API key
census_api_key("cb0a6c25010d92d0c374f6a32aa1ea3959229e34", install = TRUE)
# Choose your state for analysis - assign it to a variable called my_state
my_state = "California"
# Write your get_acs() code here
california_gacs_data = get_acs(
geography = "county",
state = my_state,
variables = c(median_household_income = "B19013_001", total_population = "B01003_001"),
year = 2022,
survey = "acs5",
output = "wide"
)
# Clean the county names to remove state name and "County"
# Hint: use mutate() with str_remove()
# Display the first few rows
glimps(california_acs_data)
glimpse(california_acs_data)
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)
library(tidycensus)
library(tidyverse)
library(knitr)
# Set your Census API key
census_api_key("cb0a6c25010d92d0c374f6a32aa1ea3959229e34", install = TRUE)
census_api_key(Sys.getenv("CENSUS_API_KEY"))
Sys.getenv("CENSUS_API_KEY")
